{"version":3,"sources":["App.tsx","lib.tsx","reportWebVitals.ts","index.tsx"],"names":["SQUARE_SIZE","RANGE_1_10","Array","from","map","_","i","LETTERS","Colors","blue","black","red","gray","Rect","props","className","width","height","x","y","stroke","color","onPointerDown","Circle","cx","cy","r","fill","Zone","style","position","top","left","right","bottom","viewBox","children","Symbol","fontFamily","dominantBaseline","textAnchor","fontSize","Field","num","idx","letter","toUpperCase","Ship","orientation","size","isDraggable","isDragging","AVAILABLE_SHIPS","id","renderDotsAroundShip","ship","dots","j","push","App","useState","keys","obj","dx","dy","entries","reduce","acc","ships","setShips","draggingShip","setDraggingShip","denormalizedShips","useMemo","shipId","fieldRect","occupiedFields","invalidShips","Set","checkShipInsideFieldRect","checkShipIntersectsOccupiedFields","fillOccupiedFields","valid","tShipId","add","maxY","maxX","validateField","fieldIsValid","has","downEvent","preventDefault","targetNode","currentTarget","document","addEventListener","moveHandler","upHandler","unstable_batchedUpdates","targetShip","cursor","removeEventListener","targetShipInitX","targetShipInitY","moveEvent","clientX","clientY","Math","abs","targetX","min","max","round","targetY","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"yPAYMA,EAAc,GACdC,EAAaC,MAAMC,KAAKD,MAAM,KAAKE,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KACrDC,EAAU,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAKxDC,EAAS,CACbC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,WAGR,SAASC,EAAKC,GASZ,IAAMC,EACJ,qBAAuBD,EAAMC,UAAN,WAAsBD,EAAMC,WAAc,IACnE,OACE,sBACEC,MAAOF,EAAME,MAAQhB,EAAc,EACnCiB,OAAQH,EAAMG,OAASjB,EAAc,EACrCkB,EAAGJ,EAAMI,EAAIlB,EACbmB,EAAGL,EAAMK,EAAInB,EACbe,UAAWA,EACXK,OAAQZ,EAAOM,EAAMO,OACrBC,cAAeR,EAAMQ,gBAK3B,SAASC,EAAOT,GAMd,OACE,wBACEU,GAAIV,EAAMI,EAAIlB,EAAcA,GAAkB,GAC9CyB,GAAIX,EAAMK,EAAInB,EAAcA,GAAkB,GAC9C0B,EAAGZ,EAAMY,EACTC,KAAMnB,EAAOM,EAAMO,SAKzB,SAASO,EAAKd,GAOZ,OACE,sBAAKe,MAAO,CAAEC,SAAU,YAAxB,UACE,qBACEf,UAAU,0BACVc,MAAO,CACLC,SAAU,WACVC,IAAK,GACLC,KAAM,GACNC,MAAO,EACPC,OAAQ,KAGZ,qBACEnB,UAAU,oBACVC,MAAOF,EAAME,MAAQhB,EACrBiB,OAAQH,EAAMG,OAASjB,EACvBmC,QAAO,UAAKrB,EAAMI,EAAIlB,EAAc,GAA7B,YAAmCc,EAAMK,EAAInB,EAAc,GAA3D,YACLc,EAAME,MAAQhB,EADT,YAEHc,EAAMG,OAASjB,GANrB,SAQGc,EAAMsB,cAMf,SAASC,EAAOvB,GACd,OACE,sBACEI,EAAGJ,EAAMI,EAAIlB,EAAcA,GAAkB,EAC7CmB,EAAGL,EAAMK,EAAInB,EAAcA,GAAkB,EAC7CsC,WAAW,UACXC,iBAAiB,SACjBC,WAAW,SACXC,SAAU,GANZ,SAQG3B,EAAMsB,WAKb,SAASM,EAAT,GAAoD,IAAnCxB,EAAkC,EAAlCA,EAAGC,EAA+B,EAA/BA,EAClB,OACE,8BACE,cAACN,EAAD,CAAMG,MAAO,GAAIC,OAAQ,GAAIC,EAAGA,EAAI,EAAGC,EAAGA,EAAI,EAAGE,MAAM,UACtDpB,EAAWG,KAAI,SAACuC,EAAKC,GAAN,OACd,cAACP,EAAD,CAAkBnB,EAAGA,EAAGC,EAAGA,EAAIyB,EAAM,EAArC,SACGD,GADUA,MAIdpC,EAAQH,KAAI,SAACyC,EAAQD,GAAT,OACX,cAACP,EAAD,CAAqBnB,EAAGA,EAAI0B,EAAM,EAAGzB,EAAGA,EAAxC,SACG0B,EAAOC,eADGD,SAQrB,SAASE,EAAKjC,GAUZ,IAAIE,EAAQ,EACRC,EAAS,EACa,eAAtBH,EAAMkC,YACRhC,EAAQF,EAAMmC,KAEdhC,EAASH,EAAMmC,KAEjB,IAAIlC,EAAY,OAQhB,OAPID,EAAMoC,cACRnC,GAAa,oBAEXD,EAAMqC,aACRpC,GAAa,mBAIb,cAACF,EAAD,CACEG,MAAOA,EACPC,OAAQA,EACRC,EAAGJ,EAAMI,EACTC,EAAGL,EAAMK,EACTE,MAAOP,EAAMO,MACbN,UAAWA,EACXO,cAAeR,EAAMQ,gBAa3B,IAAM8B,EAA8B,CAClC,CAAEH,KAAM,EAAG/B,EAAG,EAAGC,EAAG,GACpB,CAAE8B,KAAM,EAAG/B,EAAG,EAAGC,EAAG,GACpB,CAAE8B,KAAM,EAAG/B,EAAG,EAAGC,EAAG,GACpB,CAAE8B,KAAM,EAAG/B,EAAG,EAAGC,EAAG,GACpB,CAAE8B,KAAM,EAAG/B,EAAG,EAAGC,EAAG,GACpB,CAAE8B,KAAM,EAAG/B,EAAG,EAAGC,EAAG,GACpB,CAAE8B,KAAM,EAAG/B,EAAG,EAAGC,EAAG,GACpB,CAAE8B,KAAM,EAAG/B,EAAG,EAAGC,EAAG,GACpB,CAAE8B,KAAM,EAAG/B,EAAG,EAAGC,EAAG,GACpB,CAAE8B,KAAM,EAAG/B,EAAG,EAAGC,EAAG,IACpBf,KAAI,SAACc,EAAG0B,GAAJ,mBAAC,eACF1B,GADC,IAEJmC,GAAIT,EACJI,YAAa,kBA4If,SAASM,EAAqBC,GAK5B,IAJA,IAAMC,EAAoB,GAClBtC,EAA4BqC,EAA5BrC,EAAGC,EAAyBoC,EAAzBpC,EAAG8B,EAAsBM,EAAtBN,KAAMD,EAAgBO,EAAhBP,YACdhC,EAAwB,eAAhBgC,EAA+BC,EAAO,EAC9ChC,EAAyB,aAAhB+B,EAA6BC,EAAO,EAC1C3C,EAAIY,EAAI,EAAGZ,EAAIY,EAAIF,EAAQ,EAAGV,IACrC,IAAK,IAAImD,EAAItC,EAAI,EAAGsC,EAAItC,EAAIF,EAAS,EAAGwC,IAClCnD,GAAKY,GAAKZ,EAAIY,EAAIF,GAASyC,GAAKtC,GAAKsC,EAAItC,EAAIF,GAG7CX,EAAI,GAAKA,EAAI,IAAMmD,EAAI,GAAKA,EAAI,IAGpCD,EAAKE,KAAK,cAACnC,EAAD,CAAQG,EAAG,IAAuBR,EAAGZ,EAAGa,EAAGsC,EAAGpC,MAAM,QAA/Bf,EAAI,IAAMmD,IAG7C,OAAOD,EAwEMG,MAjOf,WAAgB,IAAD,EACaC,oBAAS,iBCxK5B,CACLC,MAHFC,ED2KgBV,EAAgBhD,KCrMV2D,EDqMsB,ECrMVC,EDqMa,ECpMxC,SAAqCF,GAArC,kCACFA,GADE,IAEL5C,EAAG4C,EAAI5C,EAAI6C,EACX5C,EAAG2C,EAAI3C,EAAI6C,QAyBD5D,KAAI,SAACc,GAAD,OAAOA,EAAEmC,MACvBY,QAASH,EAAII,QACX,SAACC,EAAKjD,GAAN,mBAAC,eAAiBiD,GAAlB,kBAAwBjD,EAAEmC,GAAKnC,MAC/B,KAPC,IACL4C,EA1BsBC,EAAYC,KDmMrB,mBACNI,EADM,KACCC,EADD,OAI2BT,mBAAwB,MAJnD,mBAINU,EAJM,KAIQC,EAJR,KA+FPC,EAAoBC,mBACxB,kBAAML,EAAMP,KAAKzD,KAAI,SAACsE,GAAD,OAAYN,EAAMH,QAAQS,QAC/C,CAACN,EAAMP,KAAMO,EAAMH,UAjGR,EAoGiCQ,mBAC5C,kBAuDJ,SACEL,EACAO,GAEA,IADA,EACMC,EAAyD,GAEzDC,EAAe,IAAIC,IAHzB,cAKmBV,GALnB,IAKA,2BAA0B,CAAC,IAAhBb,EAAe,QACxBwB,EAAyBxB,GACzByB,EAAkCzB,GAClC0B,EAAmB1B,IARrB,8BAWA,MAAO,CACLsB,eACAK,MAA6B,IAAtBL,EAAa5B,MAGtB,SAAS+B,EAAkCzB,GAIzC,IAJ0D,IAClDrC,EAA4BqC,EAA5BrC,EAAGC,EAAyBoC,EAAzBpC,EAAG8B,EAAsBM,EAAtBN,KAAMD,EAAgBO,EAAhBP,YACdhC,EAAwB,eAAhBgC,EAA+BC,EAAO,EAC9ChC,EAAyB,aAAhB+B,EAA6BC,EAAO,EAC1C3C,EAAIY,EAAGZ,EAAIY,EAAIF,EAAOV,IAC7B,IAAK,IAAImD,EAAItC,EAAGsC,EAAItC,EAAIF,EAAQwC,IAAK,CAAC,IAAD,EAC7B0B,EAAO,UAAGP,EAAenB,UAAlB,aAAG,EAAoBnD,GACrB,MAAX6E,GAAmBA,IAAY5B,EAAKF,KACtCwB,EAAaO,IAAI7B,EAAKF,IACtBwB,EAAaO,IAAID,KAMzB,SAASF,EAAmB1B,GAI1B,IAJ2C,IACnCrC,EAA4BqC,EAA5BrC,EAAGC,EAAyBoC,EAAzBpC,EAAG8B,EAAsBM,EAAtBN,KAAMD,EAAgBO,EAAhBP,YACdhC,EAAwB,eAAhBgC,EAA+BC,EAAO,EAC9ChC,EAAyB,aAAhB+B,EAA6BC,EAAO,EAC1C3C,EAAIY,EAAI,EAAGZ,EAAIY,EAAIF,EAAQ,EAAGV,IACrC,IAAK,IAAImD,EAAItC,EAAI,EAAGsC,EAAItC,EAAIF,EAAS,EAAGwC,IACtCmB,EAAenB,GAAKmB,EAAenB,IAAM,GACb,MAAxBmB,EAAenB,GAAGnD,KACpBsE,EAAenB,GAAGnD,GAAKiD,EAAKF,IAMpC,SAAS0B,EAAyBxB,GAAiB,IACzCrC,EAA4BqC,EAA5BrC,EAAGC,EAAyBoC,EAAzBpC,EAAG8B,EAAsBM,EAAtBN,KAAMD,EAAgBO,EAAhBP,YACdqC,EAAOV,EAAUxD,EAAIwD,EAAU1D,OAC/BqE,EAAOX,EAAUzD,EAAIyD,EAAU3D,MAEjCE,EAAIyD,EAAUzD,GAAKC,EAAIwD,EAAUxD,EACnC0D,EAAaO,IAAI7B,EAAKF,IAGJ,aAAhBL,GACE7B,EAAI8B,EAAOoC,GAAQnE,GAAKoE,IAC1BT,EAAaO,IAAI7B,EAAKF,KAGpBlC,GAAKkE,GAAQnE,EAAI+B,EAAOqC,IAC1BT,EAAaO,IAAI7B,EAAKF,KArHxBkC,CAAcf,EAAmB,CAAEtD,EAAG,EAAGC,EAAG,EAAGH,MAAO,GAAIC,OAAQ,OACpE,CAACuD,IAHKK,EApGK,EAoGLA,aAAqBW,EApGhB,EAoGSN,MAMtB,OACE,sBAAKnE,UAAU,MAAf,UACE,+FACA,gCACE,qJACA,qBAAKA,UAAU,0BAAf,SACE,eAACa,EAAD,CAAMV,EAAG,EAAGC,EAAG,EAAGH,MAnST,GAmS4BC,OAlS3B,GAkSV,UACE,cAACyB,EAAD,CAAOxB,EAAG,EAAGC,EAAG,IAEfqD,EAAkBpE,KAAI,SAACmD,GAAD,OACrB,eAAC,WAAD,WACE,cAACR,EAAD,2BACMQ,GADN,IAEErC,EAAGqC,EAAKrC,EACRC,EAAGoC,EAAKpC,EACRE,MAAOwD,EAAaY,IAAIlC,EAAKF,IAAM,MAAQ,OAC3CH,aAAW,EACXC,WAAYmB,IAAiBf,EAAKF,GAClC/B,eArHb+B,EAqH8CE,EAAKF,GArHpC,SAACqC,GACfA,EAAUC,iBAEV,IAAMC,EAAaF,EAAUG,cAE7BC,SAASC,iBAAiB,cAAeC,GACzCF,SAASC,iBAAiB,aA2D1B,SAASE,IACPC,mCAAwB,WACjB/C,GACHkB,GAAS,SAACD,GACR,IC7P+CN,ED6PzCqC,EAAa/B,EAAMH,QAAQZ,GACjC,OAAkB,MAAd8C,EACK/B,EAEF,2BACFA,GADL,IAEEH,QAAQ,2BAAMG,EAAMH,SAAb,kBAAuBZ,GCnQeS,EDmQLqC,EClQ/C,2BACFrC,GADL,IAEEd,YAAiC,eAApBc,EAAId,YAA+B,WAAa,uBDqQvDuB,EAAgB,SAElBqB,EAAW/D,MAAMuE,OAAS,GAC1BN,SAASO,oBAAoB,cAAeL,GAC5CF,SAASO,oBAAoB,YAAaJ,MA5E5C,IACIK,EACAC,EAFApD,GAAa,EAIjB,SAAS6C,EAAYQ,GACnBA,EAAUb,iBAEV,IAAM5B,EAAKyC,EAAUC,QAAUf,EAAUe,QACnCzC,EAAKwC,EAAUE,QAAUhB,EAAUgB,SAErCC,KAAKC,IAAI7C,GAAM/D,EAAc,GAAK2G,KAAKC,IAAI5C,GAAMhE,EAAc,KACjEmD,GAAa,EACboB,EAAgBlB,GAChBuC,EAAW/D,MAAMuE,OAAS,YAGxBjD,GACFkB,GAAS,SAACD,GACR,IAAM+B,EAAa/B,EAAMH,QAAQZ,GACjC,GAAkB,MAAd8C,EACF,OAAO/B,EAGc,MAAnBkC,GAA8C,MAAnBC,IAC7BD,EAAkBH,EAAWjF,EAC7BqF,EAAkBJ,EAAWhF,GAG/B,ICtOWD,EAAWC,EDsOhBH,EACuB,aAA3BmF,EAAWnD,YAA6B,EAAImD,EAAWlD,KACnDhC,EACuB,eAA3BkF,EAAWnD,YAA+B,EAAImD,EAAWlD,KAErD4D,EAAUF,KAAKG,IAnOd,GAoOQ9F,EAAQ,EACrB2F,KAAKI,IAAI,EAAGT,EAAkBK,KAAKK,MAAMjD,EAAK/D,KAE1CiH,EAAUN,KAAKG,IAtOb,GAuOQ7F,EAAS,EACvB0F,KAAKI,IAAI,EAAGR,EAAkBI,KAAKK,MAAMhD,EAAKhE,KAGhD,OAAImG,EAAWjF,IAAM2F,GAAWV,EAAWhF,IAAM8F,EACxC7C,EAGF,2BACFA,GADL,IAEEH,QAAQ,2BACHG,EAAMH,SADJ,kBAEJZ,GC5PMnC,ED4PM2F,EC5PK1F,ED4PI8F,EC3P7B,SAAqCnD,GAArC,kCACFA,GADE,IAEL5C,IACAC,QDwP2CgF,gBA6Dd,MAAhB7B,GAAwBhB,EAAqBC,KAVjCA,EAAKF,IA7G9B,IAACA,aA6HC,wBAAQ6D,UAAW1B,EAAnB,sDEzTS2B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,SAM1BZ,M","file":"static/js/main.9abb6b24.chunk.js","sourcesContent":["import \"./App.css\";\nimport {\n  PointerEventHandler,\n  PointerEvent,\n  ReactNode,\n  useState,\n  Fragment,\n  useMemo,\n} from \"react\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { normalizeById, shiftBy, moveTo, flip, Orientation } from \"./lib\";\n\nconst SQUARE_SIZE = 20;\nconst RANGE_1_10 = Array.from(Array(10)).map((_, i) => i + 1);\nconst LETTERS = [\"а\", \"б\", \"в\", \"г\", \"д\", \"е\", \"ж\", \"з\", \"и\", \"к\"];\n\nconst GAME_WIDTH = 25;\nconst GAME_HEIGHT = 13;\n\nconst Colors = {\n  blue: \"#3399cc\",\n  black: \"#000000\",\n  red: \"#cc0000\",\n  gray: \"#999999\",\n};\n\nfunction Rect(props: {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  color: keyof typeof Colors;\n  className?: string;\n  onPointerDown?: PointerEventHandler<SVGElement>;\n}) {\n  const className =\n    \"Game-object__rect\" + (props.className ? ` ${props.className}` : \"\");\n  return (\n    <rect\n      width={props.width * SQUARE_SIZE + 1}\n      height={props.height * SQUARE_SIZE + 1}\n      x={props.x * SQUARE_SIZE}\n      y={props.y * SQUARE_SIZE}\n      className={className}\n      stroke={Colors[props.color]}\n      onPointerDown={props.onPointerDown}\n    />\n  );\n}\n\nfunction Circle(props: {\n  x: number;\n  y: number;\n  r: number;\n  color: keyof typeof Colors;\n}) {\n  return (\n    <circle\n      cx={props.x * SQUARE_SIZE + SQUARE_SIZE / 2 + 0.5}\n      cy={props.y * SQUARE_SIZE + SQUARE_SIZE / 2 + 0.5}\n      r={props.r}\n      fill={Colors[props.color]}\n    />\n  );\n}\n\nfunction Zone(props: {\n  x: number;\n  y: number;\n  children: ReactNode;\n  width: number;\n  height: number;\n}) {\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div\n        className=\"Game-object__background\"\n        style={{\n          position: \"absolute\",\n          top: 10,\n          left: 10,\n          right: 9,\n          bottom: 9,\n        }}\n      />\n      <svg\n        className=\"Game-object__zone\"\n        width={props.width * SQUARE_SIZE}\n        height={props.height * SQUARE_SIZE}\n        viewBox={`${props.x * SQUARE_SIZE - 10} ${props.y * SQUARE_SIZE - 10} ${\n          props.width * SQUARE_SIZE\n        } ${props.height * SQUARE_SIZE}`}\n      >\n        {props.children}\n      </svg>\n    </div>\n  );\n}\n\nfunction Symbol(props: { x: number; y: number; children: ReactNode }) {\n  return (\n    <text\n      x={props.x * SQUARE_SIZE + SQUARE_SIZE / 2 + 1}\n      y={props.y * SQUARE_SIZE + SQUARE_SIZE / 2 + 1}\n      fontFamily=\"inherit\"\n      dominantBaseline=\"middle\"\n      textAnchor=\"middle\"\n      fontSize={12}\n    >\n      {props.children}\n    </text>\n  );\n}\n\nfunction Field({ x, y }: { x: number; y: number }) {\n  return (\n    <g>\n      <Rect width={10} height={10} x={x + 1} y={y + 1} color=\"black\" />\n      {RANGE_1_10.map((num, idx) => (\n        <Symbol key={num} x={x} y={y + idx + 1}>\n          {num}\n        </Symbol>\n      ))}\n      {LETTERS.map((letter, idx) => (\n        <Symbol key={letter} x={x + idx + 1} y={y}>\n          {letter.toUpperCase()}\n        </Symbol>\n      ))}\n    </g>\n  );\n}\n\nfunction Ship(props: {\n  x: number;\n  y: number;\n  size: number;\n  orientation: Orientation;\n  color: keyof typeof Colors;\n  isDraggable?: boolean;\n  onPointerDown?: PointerEventHandler<SVGElement>;\n  isDragging?: boolean;\n}) {\n  let width = 1;\n  let height = 1;\n  if (props.orientation === \"horizontal\") {\n    width = props.size;\n  } else {\n    height = props.size;\n  }\n  let className = \"Ship\";\n  if (props.isDraggable) {\n    className += \" Ship--draggable\";\n  }\n  if (props.isDragging) {\n    className += \" Ship--dragging\";\n  }\n\n  return (\n    <Rect\n      width={width}\n      height={height}\n      x={props.x}\n      y={props.y}\n      color={props.color}\n      className={className}\n      onPointerDown={props.onPointerDown}\n    />\n  );\n}\n\ntype ShipType = {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  orientation: Orientation;\n};\n\nconst AVAILABLE_SHIPS: ShipType[] = [\n  { size: 4, x: 0, y: 0 },\n  { size: 3, x: 0, y: 2 },\n  { size: 3, x: 5, y: 2 },\n  { size: 2, x: 0, y: 4 },\n  { size: 2, x: 3, y: 4 },\n  { size: 2, x: 6, y: 0 },\n  { size: 1, x: 0, y: 6 },\n  { size: 1, x: 4, y: 6 },\n  { size: 1, x: 7, y: 6 },\n  { size: 1, x: 7, y: 4 },\n].map((x, idx) => ({\n  ...x,\n  id: idx,\n  orientation: \"horizontal\",\n}));\n\nfunction App() {\n  const [ships, setShips] = useState(() =>\n    normalizeById(AVAILABLE_SHIPS.map(shiftBy(2, 2)))\n  );\n  const [draggingShip, setDraggingShip] = useState<number | null>(null);\n\n  const handlePointerDown =\n    (id: number) => (downEvent: PointerEvent<SVGElement>) => {\n      downEvent.preventDefault();\n\n      const targetNode = downEvent.currentTarget;\n\n      document.addEventListener(\"pointermove\", moveHandler);\n      document.addEventListener(\"pointerup\", upHandler);\n\n      let isDragging = false;\n      let targetShipInitX: number;\n      let targetShipInitY: number;\n\n      function moveHandler(moveEvent: globalThis.PointerEvent) {\n        moveEvent.preventDefault();\n\n        const dx = moveEvent.clientX - downEvent.clientX;\n        const dy = moveEvent.clientY - downEvent.clientY;\n\n        if (Math.abs(dx) > SQUARE_SIZE / 3 || Math.abs(dy) > SQUARE_SIZE / 3) {\n          isDragging = true;\n          setDraggingShip(id);\n          targetNode.style.cursor = \"grabbing\";\n        }\n\n        if (isDragging) {\n          setShips((ships) => {\n            const targetShip = ships.entries[id];\n            if (targetShip == null) {\n              return ships;\n            }\n\n            if (targetShipInitX == null || targetShipInitY == null) {\n              targetShipInitX = targetShip.x;\n              targetShipInitY = targetShip.y;\n            }\n\n            const width =\n              targetShip.orientation === \"vertical\" ? 1 : targetShip.size;\n            const height =\n              targetShip.orientation === \"horizontal\" ? 1 : targetShip.size;\n\n            const targetX = Math.min(\n              GAME_WIDTH - width - 1,\n              Math.max(0, targetShipInitX + Math.round(dx / SQUARE_SIZE))\n            );\n            const targetY = Math.min(\n              GAME_HEIGHT - height - 1,\n              Math.max(0, targetShipInitY + Math.round(dy / SQUARE_SIZE))\n            );\n\n            if (targetShip.x === targetX && targetShip.y === targetY) {\n              return ships;\n            }\n\n            return {\n              ...ships,\n              entries: {\n                ...ships.entries,\n                [id]: moveTo(targetX, targetY)(targetShip),\n              },\n            };\n          });\n        }\n      }\n\n      function upHandler() {\n        unstable_batchedUpdates(() => {\n          if (!isDragging) {\n            setShips((ships) => {\n              const targetShip = ships.entries[id];\n              if (targetShip == null) {\n                return ships;\n              }\n              return {\n                ...ships,\n                entries: { ...ships.entries, [id]: flip(targetShip) },\n              };\n            });\n          }\n\n          setDraggingShip(null);\n        });\n        targetNode.style.cursor = \"\";\n        document.removeEventListener(\"pointermove\", moveHandler);\n        document.removeEventListener(\"pointerup\", upHandler);\n      }\n    };\n\n  const denormalizedShips = useMemo(\n    () => ships.keys.map((shipId) => ships.entries[shipId]),\n    [ships.keys, ships.entries]\n  );\n\n  const { invalidShips, valid: fieldIsValid } = useMemo(\n    () =>\n      validateField(denormalizedShips, { x: 1, y: 1, width: 10, height: 10 }),\n    [denormalizedShips]\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Морской Бой</h1>\n      <div>\n        <h2>Расстановка кораблей</h2>\n        <div className=\"App__game-field-wrapper\">\n          <Zone x={0} y={0} width={GAME_WIDTH} height={GAME_HEIGHT}>\n            <Field x={0} y={0} />\n\n            {denormalizedShips.map((ship) => (\n              <Fragment key={ship.id}>\n                <Ship\n                  {...ship}\n                  x={ship.x}\n                  y={ship.y}\n                  color={invalidShips.has(ship.id) ? \"red\" : \"blue\"}\n                  isDraggable\n                  isDragging={draggingShip === ship.id}\n                  onPointerDown={handlePointerDown(ship.id)}\n                />\n                {draggingShip != null && renderDotsAroundShip(ship)}\n              </Fragment>\n            ))}\n          </Zone>\n        </div>\n      </div>\n      <button disabled={!fieldIsValid}>Готово</button>\n    </div>\n  );\n}\n\nfunction renderDotsAroundShip(ship: ShipType) {\n  const dots: ReactNode[] = [];\n  const { x, y, size, orientation } = ship;\n  const width = orientation === \"horizontal\" ? size : 1;\n  const height = orientation === \"vertical\" ? size : 1;\n  for (let i = x - 1; i < x + width + 1; i++) {\n    for (let j = y - 1; j < y + height + 1; j++) {\n      if (i >= x && i < x + width && j >= y && j < y + height) {\n        continue;\n      }\n      if (i < 1 || i > 10 || j < 1 || j > 10) {\n        continue;\n      }\n      dots.push(<Circle r={1.5} key={i + \"-\" + j} x={i} y={j} color=\"gray\" />);\n    }\n  }\n  return dots;\n}\n\nfunction validateField(\n  ships: ShipType[],\n  fieldRect: { x: number; y: number; width: number; height: number }\n) {\n  const occupiedFields: Record<number, Record<number, number>> = {};\n\n  const invalidShips = new Set<number>();\n\n  for (const ship of ships) {\n    checkShipInsideFieldRect(ship);\n    checkShipIntersectsOccupiedFields(ship);\n    fillOccupiedFields(ship);\n  }\n\n  return {\n    invalidShips,\n    valid: invalidShips.size === 0,\n  };\n\n  function checkShipIntersectsOccupiedFields(ship: ShipType) {\n    const { x, y, size, orientation } = ship;\n    const width = orientation === \"horizontal\" ? size : 1;\n    const height = orientation === \"vertical\" ? size : 1;\n    for (let i = x; i < x + width; i++) {\n      for (let j = y; j < y + height; j++) {\n        const tShipId = occupiedFields[j]?.[i];\n        if (tShipId != null && tShipId !== ship.id) {\n          invalidShips.add(ship.id);\n          invalidShips.add(tShipId);\n        }\n      }\n    }\n  }\n\n  function fillOccupiedFields(ship: ShipType) {\n    const { x, y, size, orientation } = ship;\n    const width = orientation === \"horizontal\" ? size : 1;\n    const height = orientation === \"vertical\" ? size : 1;\n    for (let i = x - 1; i < x + width + 1; i++) {\n      for (let j = y - 1; j < y + height + 1; j++) {\n        occupiedFields[j] = occupiedFields[j] || {};\n        if (occupiedFields[j][i] == null) {\n          occupiedFields[j][i] = ship.id;\n        }\n      }\n    }\n  }\n\n  function checkShipInsideFieldRect(ship: ShipType) {\n    const { x, y, size, orientation } = ship;\n    const maxY = fieldRect.y + fieldRect.height;\n    const maxX = fieldRect.x + fieldRect.width;\n\n    if (x < fieldRect.x || y < fieldRect.y) {\n      invalidShips.add(ship.id);\n      return;\n    }\n    if (orientation === \"vertical\") {\n      if (y + size > maxY || x >= maxX) {\n        invalidShips.add(ship.id);\n      }\n    } else {\n      if (y >= maxY || x + size > maxX) {\n        invalidShips.add(ship.id);\n      }\n    }\n  }\n}\n\nexport default App;\n","export function shiftBy(dx: number, dy: number) {\n  return <T extends { x: number; y: number }>(obj: T): T => ({\n    ...obj,\n    x: obj.x + dx,\n    y: obj.y + dy,\n  });\n}\n\nexport function moveTo(x: number, y: number) {\n  return <T extends { x: number; y: number }>(obj: T): T => ({\n    ...obj,\n    x,\n    y,\n  });\n}\n\nexport type Orientation = \"horizontal\" | \"vertical\";\n\nexport function flip<T extends { orientation: Orientation }>(obj: T): T {\n  return {\n    ...obj,\n    orientation: obj.orientation === \"horizontal\" ? \"vertical\" : \"horizontal\",\n  };\n}\n\nexport function normalizeById<T extends { id: Id }, Id extends string | number>(\n  obj: T[]\n): { keys: Id[]; entries: Record<Id, T> } {\n  return {\n    keys: obj.map((x) => x.id),\n    entries: obj.reduce(\n      (acc, x) => ({ ...acc, [x.id]: x }),\n      {} as Record<Id, T>\n    ),\n  };\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}