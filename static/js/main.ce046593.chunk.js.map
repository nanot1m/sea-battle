{"version":3,"sources":["lib.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["normalizeById","obj","keys","map","x","id","entries","reduce","acc","SQUARE_SIZE","RANGE_1_10","Array","from","_","i","LETTERS","Colors","blue","black","red","gray","transparent","Rect","props","className","width","height","y","stroke","color","onPointerDown","Circle","cx","cy","r","fill","Zone","style","position","top","left","right","bottom","viewBox","children","Symbol","fontFamily","dominantBaseline","textAnchor","fontSize","Field","isInteractive","onCellClick","useState","hoveredCell","setHoveredCell","onPointerMove","e","currentTarget","getBoundingClientRect","dx","clientX","dy","clientY","targetX","Math","floor","targetY","onPointerLeave","onPointerUp","num","idx","letter","toUpperCase","Ship","orientation","size","isDraggable","isDragging","BattleScreen","clickedCells","setClickedCells","normalizedEnemyShips","useMemo","enemyShips","enemyShipPositions","result","ship","j","destroyedShipsMapRef","useRef","ships","cell","prevClickedCells","find","curCell","current","targetShip","cellsToAdd","push","length","concat","PlanningScreen","generateField","setShips","draggingShip","setDraggingShip","denormalizedShips","shipId","validateField","invalidShips","fieldIsValid","valid","has","downEvent","preventDefault","targetNode","document","addEventListener","moveHandler","upHandler","unstable_batchedUpdates","cursor","removeEventListener","targetShipInitX","targetShipInitY","moveEvent","abs","min","max","round","renderDotsAroundShip","onClick","disabled","onReady","dots","sizes","fieldRect","random","pop","occupiedFields","Set","checkShipInsideFieldRect","checkShipIntersectsOccupiedFields","fillOccupiedFields","tShipId","add","maxY","maxX","App","type","gameState","setGameState","renderGameState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce046593.chunk.js","sourcesContent":["export function shiftBy(dx: number, dy: number) {\n  return <T extends { x: number; y: number }>(obj: T): T => ({\n    ...obj,\n    x: obj.x + dx,\n    y: obj.y + dy,\n  });\n}\n\nexport function moveTo(x: number, y: number) {\n  return <T extends { x: number; y: number }>(obj: T): T => ({\n    ...obj,\n    x,\n    y,\n  });\n}\n\nexport type Orientation = \"horizontal\" | \"vertical\";\n\nexport function flip<T extends { orientation: Orientation }>(obj: T): T {\n  return {\n    ...obj,\n    orientation: obj.orientation === \"horizontal\" ? \"vertical\" : \"horizontal\",\n  };\n}\n\nexport function normalizeById<T extends { id: Id }, Id extends string | number>(\n  obj: T[]\n): { keys: Id[]; entries: Record<Id, T> } {\n  return {\n    keys: obj.map((x) => x.id),\n    entries: obj.reduce(\n      (acc, x) => ({ ...acc, [x.id]: x }),\n      {} as Record<Id, T>\n    ),\n  };\n}\n","import \"./App.css\";\nimport {\n  PointerEventHandler,\n  PointerEvent,\n  ReactNode,\n  useState,\n  Fragment,\n  useMemo,\n} from \"react\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { normalizeById, moveTo, flip, Orientation } from \"./lib\";\nimport { useRef } from \"react\";\n\nconst SQUARE_SIZE = 20;\nconst RANGE_1_10 = Array.from(Array(10)).map((_, i) => i + 1);\nconst LETTERS = [\"а\", \"б\", \"в\", \"г\", \"д\", \"е\", \"ж\", \"з\", \"и\", \"к\"];\n\nconst GAME_WIDTH = 25;\nconst GAME_HEIGHT = 13;\n\nconst Colors = {\n  blue: \"#3399cc\",\n  black: \"#000000\",\n  red: \"#cc0000\",\n  gray: \"#999999\",\n  transparent: \"rgba(0,0,0,0)\",\n};\n\nfunction Rect(props: {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  color: keyof typeof Colors;\n  className?: string;\n  onPointerDown?: PointerEventHandler<SVGElement>;\n}) {\n  const className =\n    \"Game-object__rect\" + (props.className ? ` ${props.className}` : \"\");\n  return (\n    <rect\n      width={props.width * SQUARE_SIZE + 1}\n      height={props.height * SQUARE_SIZE + 1}\n      x={props.x * SQUARE_SIZE}\n      y={props.y * SQUARE_SIZE}\n      className={className}\n      stroke={Colors[props.color]}\n      onPointerDown={props.onPointerDown}\n    />\n  );\n}\n\nfunction Circle(props: {\n  x: number;\n  y: number;\n  r: number;\n  color: keyof typeof Colors;\n}) {\n  return (\n    <circle\n      cx={props.x * SQUARE_SIZE + SQUARE_SIZE / 2 + 0.5}\n      cy={props.y * SQUARE_SIZE + SQUARE_SIZE / 2 + 0.5}\n      r={props.r}\n      fill={Colors[props.color]}\n    />\n  );\n}\n\nfunction Zone(props: {\n  x: number;\n  y: number;\n  children: ReactNode;\n  width: number;\n  height: number;\n}) {\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div\n        className=\"Game-object__background\"\n        style={{\n          position: \"absolute\",\n          top: 10,\n          left: 10,\n          right: 9,\n          bottom: 9,\n        }}\n      />\n      <svg\n        className=\"Game-object__zone\"\n        width={props.width * SQUARE_SIZE}\n        height={props.height * SQUARE_SIZE}\n        viewBox={`${props.x * SQUARE_SIZE - 10} ${props.y * SQUARE_SIZE - 10} ${\n          props.width * SQUARE_SIZE\n        } ${props.height * SQUARE_SIZE}`}\n      >\n        {props.children}\n      </svg>\n    </div>\n  );\n}\n\nfunction Symbol(props: {\n  x: number;\n  y: number;\n  children: ReactNode;\n  fontSize?: number;\n  color?: keyof typeof Colors;\n}) {\n  return (\n    <text\n      x={props.x * SQUARE_SIZE + SQUARE_SIZE / 2 + 1}\n      y={props.y * SQUARE_SIZE + SQUARE_SIZE / 2 + 1}\n      fontFamily=\"inherit\"\n      dominantBaseline=\"middle\"\n      textAnchor=\"middle\"\n      fontSize={props.fontSize ?? 12}\n      fill={props.color ?? Colors.black}\n    >\n      {props.children}\n    </text>\n  );\n}\n\ntype Cell = {\n  x: number;\n  y: number;\n};\n\nfunction Field({\n  x,\n  y,\n  isInteractive = false,\n  onCellClick,\n}: {\n  x: number;\n  y: number;\n  isInteractive?: boolean;\n  onCellClick?: (cell: Cell | null) => void;\n}) {\n  const [hoveredCell, setHoveredCell] = useState<Cell | null>(null);\n\n  function handlePointerMove(e: PointerEvent) {\n    if (!isInteractive) {\n      return;\n    }\n\n    const { top, left } = e.currentTarget.getBoundingClientRect();\n\n    const dx = e.clientX - left;\n    const dy = e.clientY - top;\n\n    const targetX = Math.floor(dx / SQUARE_SIZE);\n    const targetY = Math.floor(dy / SQUARE_SIZE);\n\n    if (targetX < 1 || targetX > 10 || targetY < 1 || targetY > 10) {\n      setHoveredCell(null);\n      return;\n    }\n\n    setHoveredCell({ x: targetX + x, y: targetY + y });\n  }\n\n  return (\n    <g\n      onPointerMove={handlePointerMove}\n      onPointerLeave={() => setHoveredCell(null)}\n      onPointerUp={() => {\n        if (!isInteractive) {\n          return;\n        }\n        onCellClick?.(hoveredCell);\n      }}\n    >\n      <Rect width={10} height={10} x={x + 1} y={y + 1} color=\"black\" />\n      {RANGE_1_10.map((num, idx) => (\n        <Symbol key={num} x={x} y={y + idx + 1}>\n          {num}\n        </Symbol>\n      ))}\n      {LETTERS.map((letter, idx) => (\n        <Symbol key={letter} x={x + idx + 1} y={y}>\n          {letter.toUpperCase()}\n        </Symbol>\n      ))}\n      {hoveredCell && (\n        <Rect\n          width={1}\n          height={1}\n          x={hoveredCell.x}\n          y={hoveredCell.y}\n          color=\"transparent\"\n          className=\"Cell Cell--hovered\"\n        />\n      )}\n    </g>\n  );\n}\n\nfunction Ship(props: {\n  x: number;\n  y: number;\n  size: number;\n  orientation: Orientation;\n  color: keyof typeof Colors;\n  isDraggable?: boolean;\n  onPointerDown?: PointerEventHandler<SVGElement>;\n  isDragging?: boolean;\n}) {\n  let width = 1;\n  let height = 1;\n  if (props.orientation === \"horizontal\") {\n    width = props.size;\n  } else {\n    height = props.size;\n  }\n  let className = \"Ship\";\n  if (props.isDraggable) {\n    className += \" Ship--draggable\";\n  }\n  if (props.isDragging) {\n    className += \" Ship--dragging\";\n  }\n\n  return (\n    <Rect\n      width={width}\n      height={height}\n      x={props.x}\n      y={props.y}\n      color={props.color}\n      className={className}\n      onPointerDown={props.onPointerDown}\n    />\n  );\n}\n\ntype ShipType = {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  orientation: Orientation;\n};\n\ntype GameState =\n  | { type: \"planning\" }\n  | { type: \"battle\"; ships: ShipType[]; enemyShips: ShipType[] };\n\nfunction App() {\n  const [gameState, setGameState] = useState<GameState>({ type: \"planning\" });\n  function renderGameState() {\n    switch (gameState.type) {\n      case \"planning\":\n        return (\n          <PlanningScreen\n            onReady={(ships: ShipType[]) => {\n              setGameState({\n                type: \"battle\",\n                ships,\n                enemyShips: generateField({\n                  x: 13,\n                  y: 1,\n                  width: 10,\n                  height: 10,\n                }),\n              });\n            }}\n          />\n        );\n      case \"battle\":\n        return (\n          <BattleScreen\n            ships={gameState.ships}\n            enemyShips={gameState.enemyShips}\n          />\n        );\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Морской Бой</h1>\n      {renderGameState()}\n    </div>\n  );\n}\n\nfunction BattleScreen(props: { ships: ShipType[]; enemyShips: ShipType[] }) {\n  const [clickedCells, setClickedCells] = useState<Cell[]>([]);\n  const normalizedEnemyShips = useMemo(\n    () => normalizeById(props.enemyShips),\n    [props.enemyShips]\n  );\n\n  const enemyShipPositions = useMemo(() => {\n    const result: Record<number, Record<number, number>> = {};\n    for (const ship of props.enemyShips) {\n      const { x, y, size, orientation } = ship;\n      const width = orientation === \"horizontal\" ? size : 1;\n      const height = orientation === \"vertical\" ? size : 1;\n      for (let i = x; i < x + width; i++) {\n        for (let j = y; j < y + height; j++) {\n          result[i] = result[i] || {};\n          result[i][j] = ship.id;\n        }\n      }\n    }\n    return result;\n  }, [props.enemyShips]);\n\n  const destroyedShipsMapRef = useRef<Record<number, number>>({});\n\n  function handleCellClick(cell: Cell | null): void {\n    return setClickedCells((prevClickedCells) => {\n      if (cell == null) return prevClickedCells;\n      if (\n        prevClickedCells.find(\n          (curCell) => curCell.x === cell.x && curCell.y === cell.y\n        )\n      ) {\n        return prevClickedCells;\n      }\n\n      if (enemyShipPositions[cell.x]?.[cell.y] != null) {\n        const id = enemyShipPositions[cell.x][cell.y];\n        destroyedShipsMapRef.current[id] =\n          destroyedShipsMapRef.current[id] || 0;\n        destroyedShipsMapRef.current[id]++;\n\n        if (\n          destroyedShipsMapRef.current[id] ===\n          normalizedEnemyShips.entries[id].size\n        ) {\n          const targetShip = normalizedEnemyShips.entries[id];\n\n          const cellsToAdd = [];\n\n          const { x, y, size, orientation } = targetShip;\n          const width = orientation === \"horizontal\" ? size : 1;\n          const height = orientation === \"vertical\" ? size : 1;\n          for (let i = x - 1; i < x + width + 1; i++) {\n            for (let j = y - 1; j < y + height + 1; j++) {\n              if (\n                prevClickedCells.find(({ x, y }) => x === i && y === j) == null\n              ) {\n                cellsToAdd.push({ x: i, y: j });\n              }\n            }\n          }\n\n          if (cellsToAdd.length === 0) {\n            return prevClickedCells;\n          }\n\n          return prevClickedCells.concat(cellsToAdd);\n        }\n      }\n      return prevClickedCells.concat(cell);\n    });\n  }\n\n  return (\n    <div>\n      <h2>Битва!</h2>\n      <div className=\"App__game-field-wrapper\">\n        <Zone x={0} y={0} width={GAME_WIDTH} height={GAME_HEIGHT}>\n          <Field x={0} y={0} />\n          {props.ships.map((ship) => (\n            <Ship\n              key={ship.id}\n              x={ship.x}\n              y={ship.y}\n              size={ship.size}\n              orientation={ship.orientation}\n              color=\"black\"\n            />\n          ))}\n\n          {clickedCells.map((cell) => {\n            if (cell.x < 13 || cell.x > 22 || cell.y < 1 || cell.y > 10)\n              return null;\n\n            return enemyShipPositions[cell.x]?.[cell.y] == null ? (\n              <Circle\n                key={`${cell.x}-${cell.y}`}\n                x={cell.x}\n                y={cell.y}\n                color=\"red\"\n                r={3}\n              />\n            ) : (\n              <Symbol\n                key={`${cell.x}-${cell.y}`}\n                x={cell.x}\n                y={cell.y}\n                color=\"red\"\n                fontSize={15}\n              >\n                X\n              </Symbol>\n            );\n          })}\n          <Field x={12} y={0} isInteractive onCellClick={handleCellClick} />\n        </Zone>\n      </div>\n    </div>\n  );\n}\n\nfunction PlanningScreen(props: { onReady: (ships: ShipType[]) => void }) {\n  const [ships, setShips] = useState(() =>\n    normalizeById(generateField({ x: 1, y: 1, width: 10, height: 10 }))\n  );\n  const [draggingShip, setDraggingShip] = useState<number | null>(null);\n\n  const handlePointerDown =\n    (id: number) => (downEvent: PointerEvent<SVGElement>) => {\n      downEvent.preventDefault();\n\n      const targetNode = downEvent.currentTarget;\n\n      document.addEventListener(\"pointermove\", moveHandler);\n      document.addEventListener(\"pointerup\", upHandler);\n\n      let isDragging = false;\n      let targetShipInitX: number;\n      let targetShipInitY: number;\n\n      function moveHandler(moveEvent: globalThis.PointerEvent) {\n        moveEvent.preventDefault();\n\n        const dx = moveEvent.clientX - downEvent.clientX;\n        const dy = moveEvent.clientY - downEvent.clientY;\n\n        if (Math.abs(dx) > SQUARE_SIZE / 3 || Math.abs(dy) > SQUARE_SIZE / 3) {\n          isDragging = true;\n          setDraggingShip(id);\n          targetNode.style.cursor = \"grabbing\";\n        }\n\n        if (isDragging) {\n          setShips((ships) => {\n            const targetShip = ships.entries[id];\n            if (targetShip == null) {\n              return ships;\n            }\n\n            if (targetShipInitX == null || targetShipInitY == null) {\n              targetShipInitX = targetShip.x;\n              targetShipInitY = targetShip.y;\n            }\n\n            const width =\n              targetShip.orientation === \"vertical\" ? 1 : targetShip.size;\n            const height =\n              targetShip.orientation === \"horizontal\" ? 1 : targetShip.size;\n\n            const targetX = Math.min(\n              GAME_WIDTH - width - 1,\n              Math.max(0, targetShipInitX + Math.round(dx / SQUARE_SIZE))\n            );\n            const targetY = Math.min(\n              GAME_HEIGHT - height - 1,\n              Math.max(0, targetShipInitY + Math.round(dy / SQUARE_SIZE))\n            );\n\n            if (targetShip.x === targetX && targetShip.y === targetY) {\n              return ships;\n            }\n\n            return {\n              ...ships,\n              entries: {\n                ...ships.entries,\n                [id]: moveTo(targetX, targetY)(targetShip),\n              },\n            };\n          });\n        }\n      }\n\n      function upHandler() {\n        unstable_batchedUpdates(() => {\n          if (!isDragging) {\n            setShips((ships) => {\n              const targetShip = ships.entries[id];\n              if (targetShip == null) {\n                return ships;\n              }\n              return {\n                ...ships,\n                entries: { ...ships.entries, [id]: flip(targetShip) },\n              };\n            });\n          }\n\n          setDraggingShip(null);\n        });\n        targetNode.style.cursor = \"\";\n        document.removeEventListener(\"pointermove\", moveHandler);\n        document.removeEventListener(\"pointerup\", upHandler);\n      }\n    };\n\n  const denormalizedShips = useMemo(\n    () => ships.keys.map((shipId) => ships.entries[shipId]),\n    [ships.keys, ships.entries]\n  );\n\n  const { invalidShips, valid: fieldIsValid } = useMemo(\n    () =>\n      validateField(denormalizedShips, { x: 1, y: 1, width: 10, height: 10 }),\n    [denormalizedShips]\n  );\n\n  return (\n    <>\n      <div>\n        <h2>Расстановка кораблей</h2>\n        <div className=\"App__game-field-wrapper\">\n          <Zone x={0} y={0} width={GAME_WIDTH} height={GAME_HEIGHT}>\n            <Field x={0} y={0} />\n            {denormalizedShips.map((ship) => (\n              <Fragment key={ship.id}>\n                <Ship\n                  {...ship}\n                  x={ship.x}\n                  y={ship.y}\n                  color={invalidShips.has(ship.id) ? \"red\" : \"blue\"}\n                  isDraggable\n                  isDragging={draggingShip === ship.id}\n                  onPointerDown={handlePointerDown(ship.id)}\n                />\n                {draggingShip != null && renderDotsAroundShip(ship)}\n              </Fragment>\n            ))}\n          </Zone>\n        </div>\n      </div>\n      <div className=\"App__buttons\">\n        <button\n          onClick={() =>\n            setShips(\n              normalizeById(\n                generateField({ x: 1, y: 1, width: 10, height: 10 })\n              )\n            )\n          }\n        >\n          Расположить случайно\n        </button>\n        <button\n          disabled={!fieldIsValid}\n          onClick={() => props.onReady(denormalizedShips)}\n        >\n          Готово\n        </button>\n      </div>\n    </>\n  );\n}\n\nfunction renderDotsAroundShip(ship: ShipType) {\n  const dots: ReactNode[] = [];\n  const { x, y, size, orientation } = ship;\n  const width = orientation === \"horizontal\" ? size : 1;\n  const height = orientation === \"vertical\" ? size : 1;\n  for (let i = x - 1; i < x + width + 1; i++) {\n    for (let j = y - 1; j < y + height + 1; j++) {\n      if (i >= x && i < x + width && j >= y && j < y + height) {\n        continue;\n      }\n      if (i < 1 || i > 10 || j < 1 || j > 10) {\n        continue;\n      }\n      dots.push(<Circle r={1.5} key={i + \"-\" + j} x={i} y={j} color=\"gray\" />);\n    }\n  }\n  return dots;\n}\n\nconst sizes = [4, 3, 3, 2, 2, 2, 1, 1, 1, 1];\n\nfunction generateField(fieldRect: {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}) {\n  const ships: ShipType[] = [];\n\n  for (const size of sizes) {\n    while (true) {\n      const orientation = Math.random() < 0.5 ? \"horizontal\" : \"vertical\";\n      const x = Math.floor(Math.random() * (GAME_WIDTH - size + 1));\n      const y = Math.floor(Math.random() * (GAME_HEIGHT - size + 1));\n      ships.push({ x, y, size, orientation, id: ships.length });\n      if (validateField(ships, fieldRect).valid) {\n        break;\n      } else {\n        ships.pop();\n      }\n    }\n  }\n\n  return ships;\n}\n\nfunction validateField(\n  ships: ShipType[],\n  fieldRect: { x: number; y: number; width: number; height: number }\n) {\n  const occupiedFields: Record<number, Record<number, number>> = {};\n\n  const invalidShips = new Set<number>();\n\n  for (const ship of ships) {\n    checkShipInsideFieldRect(ship);\n    checkShipIntersectsOccupiedFields(ship);\n    fillOccupiedFields(ship);\n  }\n\n  return {\n    invalidShips,\n    valid: invalidShips.size === 0,\n  };\n\n  function checkShipIntersectsOccupiedFields(ship: ShipType) {\n    const { x, y, size, orientation } = ship;\n    const width = orientation === \"horizontal\" ? size : 1;\n    const height = orientation === \"vertical\" ? size : 1;\n    for (let i = x; i < x + width; i++) {\n      for (let j = y; j < y + height; j++) {\n        const tShipId = occupiedFields[j]?.[i];\n        if (tShipId != null && tShipId !== ship.id) {\n          invalidShips.add(ship.id);\n          invalidShips.add(tShipId);\n        }\n      }\n    }\n  }\n\n  function fillOccupiedFields(ship: ShipType) {\n    const { x, y, size, orientation } = ship;\n    const width = orientation === \"horizontal\" ? size : 1;\n    const height = orientation === \"vertical\" ? size : 1;\n    for (let i = x - 1; i < x + width + 1; i++) {\n      for (let j = y - 1; j < y + height + 1; j++) {\n        occupiedFields[j] = occupiedFields[j] || {};\n        if (occupiedFields[j][i] == null) {\n          occupiedFields[j][i] = ship.id;\n        }\n      }\n    }\n  }\n\n  function checkShipInsideFieldRect(ship: ShipType) {\n    const { x, y, size, orientation } = ship;\n    const maxY = fieldRect.y + fieldRect.height;\n    const maxX = fieldRect.x + fieldRect.width;\n\n    if (x < fieldRect.x || y < fieldRect.y) {\n      invalidShips.add(ship.id);\n      return;\n    }\n    if (orientation === \"vertical\") {\n      if (y + size > maxY || x >= maxX) {\n        invalidShips.add(ship.id);\n      }\n    } else {\n      if (y >= maxY || x + size > maxX) {\n        invalidShips.add(ship.id);\n      }\n    }\n  }\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}